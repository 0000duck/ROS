.TH "Checkers::CheckersGame" 3 "Wed Sep 28 2016" "CRCL FANUC" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Checkers::CheckersGame \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Checkers\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBBoardType\fP & \fBBoard\fP ()"
.br
.ti -1c
.RI "\fBCheckersGame\fP ()"
.br
.ti -1c
.RI "void \fBRestore\fP (std::string filename, std::vector< \fBMove\fP > &moves)"
.br
.ti -1c
.RI "void \fBSave\fP (std::string filename)"
.br
.ti -1c
.RI "void \fBDump\fP (std::ostream &str, const \fBMove\fP move)"
.br
.ti -1c
.RI "void \fBDump\fP (std::ostream &str, const std::vector< \fBMove\fP > &moves)"
.br
.ti -1c
.RI "bool \fBIsKing\fP (int player, \fBMove\fP m)"
.br
.ti -1c
.RI "bool \fBLegalRow\fP (int n)"
.br
.ti -1c
.RI "char \fBvalue2symbol\fP (int i)"
.br
.ti -1c
.RI "std::string \fBprintDisplayFancy\fP (\fBBoardType\fP inboard)"
.br
.ti -1c
.RI "void \fBReplaceAll\fP (std::string &tInput, std::string tFind, std::string tReplace)"
.br
.ti -1c
.RI "int \fBsymbol2value\fP (char c)"
.br
.ti -1c
.RI "void \fBDeserialize\fP (std::istream &s_in, \fBBoardType\fP &board_out)"
.br
.ti -1c
.RI "void \fBKingMe\fP (\fBBoardType\fP &inboard)"
.br
.ti -1c
.RI "void \fBJump\fP (\fBBoardType\fP &inboard, int i, int j, \fBMove\fP move)"
.br
.ti -1c
.RI "bool \fBIsWin\fP (\fBBoardType\fP &inboard, int player)"
.br
.ti -1c
.RI "std::vector< \fBMove\fP > \fBBuildMoves\fP (\fBBoardType\fP inboard, int player, \fBMove\fP from, bool bJumpOnly=false)"
.br
.ti -1c
.RI "std::map< \fBMove\fP, std::vector
.br
< \fBMove\fP > > \fBGenerateMoveList\fP (\fBBoardType\fP inboard, int player)"
.br
.ti -1c
.RI "std::string \fBDumpLegalMoves\fP (std::map< \fBMove\fP, std::vector< \fBMove\fP >> &moves)"
.br
.ti -1c
.RI "std::string \fBLegalMove\fP (const \fBBoardType\fP &inboard, int player, int i, int j, \fBMove\fP m)"
.br
.ti -1c
.RI "\fBBoardType\fP \fBMakeMove\fP (\fBBoardType\fP inboard, int player, int i, int j, \fBMove\fP m)"
.br
.ti -1c
.RI "double \fBEval\fP (\fBBoardType\fP &inBoard, int player)"
.br
.ti -1c
.RI "bool \fBRandomMove\fP (std::map< \fBMove\fP, std::vector< \fBMove\fP >> &moves, \fBMove\fP &m1, \fBMove\fP &m2)"
.br
.ti -1c
.RI "double \fBDoubleJumpEval\fP (\fBMove\fP &m)"
.br
.ti -1c
.RI "double \fBMinMaxEval\fP (int depth, int player, \fBBoardType\fP curBoard, double signFactor)"
.br
.ti -1c
.RI "bool \fBMinMaxBestMove\fP (std::map< \fBMove\fP, std::vector< \fBMove\fP >> &moves, \fBBoardType\fP curBoard, int player, \fBMove\fP &m1, \fBMove\fP &m2)"
.br
.ti -1c
.RI "std::string \fBTestBoard\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBBoardType\fP \fBaboard\fP"
.br
.ti -1c
.RI "std::vector< \fBMove\fP > \fBallmoves\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Checkers::CheckersGame::CheckersGame ()\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBBoardType\fP& Checkers::CheckersGame::Board ()\fC [inline]\fP"

.SS "std::vector<\fBMove\fP> Checkers::CheckersGame::BuildMoves (\fBBoardType\fPinboard, intplayer, \fBMove\fPfrom, boolbJumpOnly = \fCfalse\fP)\fC [inline]\fP"

.SS "void Checkers::CheckersGame::Deserialize (std::istream &s_in, \fBBoardType\fP &board_out)\fC [inline]\fP"

.SS "double Checkers::CheckersGame::DoubleJumpEval (\fBMove\fP &m)\fC [inline]\fP"

.SS "void Checkers::CheckersGame::Dump (std::ostream &str, const \fBMove\fPmove)\fC [inline]\fP"

.SS "void Checkers::CheckersGame::Dump (std::ostream &str, const std::vector< \fBMove\fP > &moves)\fC [inline]\fP"

.SS "std::string Checkers::CheckersGame::DumpLegalMoves (std::map< \fBMove\fP, std::vector< \fBMove\fP >> &moves)\fC [inline]\fP"

.SS "double Checkers::CheckersGame::Eval (\fBBoardType\fP &inBoard, intplayer)\fC [inline]\fP"

.SS "std::map<\fBMove\fP, std::vector<\fBMove\fP> > Checkers::CheckersGame::GenerateMoveList (\fBBoardType\fPinboard, intplayer)\fC [inline]\fP"

.SS "bool Checkers::CheckersGame::IsKing (intplayer, \fBMove\fPm)\fC [inline]\fP"

.SS "bool Checkers::CheckersGame::IsWin (\fBBoardType\fP &inboard, intplayer)\fC [inline]\fP"

.SS "void Checkers::CheckersGame::Jump (\fBBoardType\fP &inboard, inti, intj, \fBMove\fPmove)\fC [inline]\fP"

.SS "void Checkers::CheckersGame::KingMe (\fBBoardType\fP &inboard)\fC [inline]\fP"

.SS "std::string Checkers::CheckersGame::LegalMove (const \fBBoardType\fP &inboard, intplayer, inti, intj, \fBMove\fPm)\fC [inline]\fP"

.SS "bool Checkers::CheckersGame::LegalRow (intn)\fC [inline]\fP"

.SS "\fBBoardType\fP Checkers::CheckersGame::MakeMove (\fBBoardType\fPinboard, intplayer, inti, intj, \fBMove\fPm)\fC [inline]\fP"

.SS "bool Checkers::CheckersGame::MinMaxBestMove (std::map< \fBMove\fP, std::vector< \fBMove\fP >> &moves, \fBBoardType\fPcurBoard, intplayer, \fBMove\fP &m1, \fBMove\fP &m2)\fC [inline]\fP"

.SS "double Checkers::CheckersGame::MinMaxEval (intdepth, intplayer, \fBBoardType\fPcurBoard, doublesignFactor)\fC [inline]\fP"

.SS "std::string Checkers::CheckersGame::printDisplayFancy (\fBBoardType\fPinboard)\fC [inline]\fP"

.SS "bool Checkers::CheckersGame::RandomMove (std::map< \fBMove\fP, std::vector< \fBMove\fP >> &moves, \fBMove\fP &m1, \fBMove\fP &m2)\fC [inline]\fP"

.SS "void Checkers::CheckersGame::ReplaceAll (std::string &tInput, std::stringtFind, std::stringtReplace)\fC [inline]\fP"

.SS "void Checkers::CheckersGame::Restore (std::stringfilename, std::vector< \fBMove\fP > &moves)\fC [inline]\fP"

.SS "void Checkers::CheckersGame::Save (std::stringfilename)\fC [inline]\fP"

.SS "int Checkers::CheckersGame::symbol2value (charc)\fC [inline]\fP"

.SS "std::string Checkers::CheckersGame::TestBoard ()\fC [inline]\fP"

.SS "char Checkers::CheckersGame::value2symbol (inti)\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBBoardType\fP Checkers::CheckersGame::aboard"

.SS "std::vector<\fBMove\fP> Checkers::CheckersGame::allmoves"


.SH "Author"
.PP 
Generated automatically by Doxygen for CRCL FANUC from the source code\&.
