.TH "IKinematics" 3 "Wed Sep 28 2016" "CRCL FANUC" \" -*- nroff -*-
.ad l
.nh
.SH NAME
IKinematics \- 
.PP
The \fBIKinematics\fP provides is an abstract class with pure virtual functions that are overriden by actual kinematic implementations\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Kinematics\&.h>\fP
.PP
Inherited by \fBArmKinematics\fP, \fBFanucLrMate200idKinematics\fP, and \fBFastKinematics\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "std::string & \fBPrefix\fP ()"
.br
.ti -1c
.RI "tf::Pose \fBbaseOffset\fP ()"
.br
.ti -1c
.RI "tf::Pose \fBinvBaseOffset\fP ()"
.br
.ti -1c
.RI "size_t \fBNumJoints\fP ()"
.br
.ti -1c
.RI "virtual void \fBSetHint\fP (std::vector< double > \fBhint\fP)"
.br
.ti -1c
.RI "virtual std::vector< std::string > \fBJointNames\fP ()"
.br
.ti -1c
.RI "virtual std::vector< std::string > \fBLinkNames\fP ()"
.br
.ti -1c
.RI "void \fBVerifyLimits\fP (std::vector< double > joints)"
.br
.ti -1c
.RI "virtual std::vector< double > \fBGetJointValues\fP ()"
.br
.RI "\fIGetJointValues returns latest reading of end effector\&. \fP"
.ti -1c
.RI "virtual void \fBSetJointValues\fP (std::vector< double > joint_values)"
.br
.RI "\fISetJointValues sets the latest joint values of the robot\&. \fP"
.ti -1c
.RI "virtual \fBRCS::Pose\fP \fBFK\fP (std::vector< double > jv)=0"
.br
.RI "\fIFK performs the forward kinematics using the joint values of the robot provided\&. \fP"
.ti -1c
.RI "virtual std::vector< double > \fBIK\fP (\fBRCS::Pose\fP &pose, std::vector< double > oldjoints)=0"
.br
.RI "\fIIK performs the inverse kinematics using the Cartesian pose provided\&. \fP"
.ti -1c
.RI "virtual std::vector< double > \fBIK\fP (\fBRCS::Pose\fP &pose, std::vector< double > minrange, std::vector< double > maxrange)"
.br
.RI "\fIIK performs the inverse kinematics using the Cartesian pose provided\&. \fP"
.ti -1c
.RI "virtual size_t \fBAllPoseToJoints\fP (\fBRCS::Pose\fP &pose, std::vector< std::vector< double > > &newjoints)=0"
.br
.RI "\fIAllPoseToJoints solves the inverse kinematics to find all solutions using the Cartesian pose provided\&. \fP"
.ti -1c
.RI "virtual std::vector< double > \fBNearestJoints\fP (std::vector< double > oldjoints, std::vector< std::vector< double > > &newjoints)=0"
.br
.RI "\fINearestJoints finds the joint set that is closest to the old joints\&. \fP"
.ti -1c
.RI "virtual void \fBInit\fP (std::string groupname, std::string tiplinkname, std::string rootlinkname)"
.br
.RI "\fIInit is necessary for ROS to initialize it kinematics using robot model \&. \fP"
.ti -1c
.RI "virtual bool \fBIsSingular\fP (\fBRCS::Pose\fP &pose, double threshold)"
.br
.RI "\fIReturns true if the determinant of the jacobian is near zero\&. \&. \fP"
.ti -1c
.RI "virtual void \fBInit\fP (ros::NodeHandle &nh)"
.br
.RI "\fIInitialize kinematics using robot_description to fill parameters \&. \fP"
.ti -1c
.RI "virtual \fBJointState\fP \fBUpdateJointState\fP (std::vector< uint64_t > jointnums, \fBJointState\fP oldjoints, \fBJointState\fP njoints)"
.br
.ti -1c
.RI "virtual std::vector< double > \fBFindBoundedSolution\fP (std::vector< std::vector< double >> &solutions, std::vector< double > &min, std::vector< double > &max)"
.br
.ti -1c
.RI "virtual std::vector< double > \fBFindBoundedSolution\fP (std::vector< std::vector< double >> &solutions, boost::shared_ptr< \fBIArmConfiguration\fP > config)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "boost::shared_ptr<::\fBKinematics\fP > \fBarmkin\fP"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "std::vector< std::string > \fBjoint_names\fP"
.br
.ti -1c
.RI "std::vector< std::string > \fBlink_names\fP"
.br
.ti -1c
.RI "std::vector< double > \fBjointvalues\fP"
.br
.ti -1c
.RI "std::vector< double > \fBjoint_min\fP"
.br
.ti -1c
.RI "std::vector< double > \fBjoint_max\fP"
.br
.ti -1c
.RI "std::vector< double > \fBhint\fP"
.br
.ti -1c
.RI "size_t \fBnum_joints\fP"
.br
.ti -1c
.RI "std::string \fB_groupname\fP"
.br
.ti -1c
.RI "std::string \fB_tiplinkname\fP"
.br
.ti -1c
.RI "std::string \fB_rootlinkname\fP"
.br
.ti -1c
.RI "std::string \fBprefix\fP"
.br
.ti -1c
.RI "tf::Pose \fBbaseoffset\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fBIKinematics\fP provides is an abstract class with pure virtual functions that are overriden by actual kinematic implementations\&. 
.SH "Member Function Documentation"
.PP 
.SS "virtual size_t IKinematics::AllPoseToJoints (\fBRCS::Pose\fP &pose, std::vector< std::vector< double > > &newjoints)\fC [pure virtual]\fP"

.PP
AllPoseToJoints solves the inverse kinematics to find all solutions using the Cartesian pose provided\&. 
.PP
\fBParameters:\fP
.RS 4
\fICartesian\fP robot pose of end effector\&. 
.br
\fIvector\fP of double vectos to hold all the IK joint solutions\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
number of solutions found\&. 
.RE
.PP

.PP
Implemented in \fBFanucLrMate200idKinematics\fP, and \fBArmKinematics\fP\&.
.SS "tf::Pose IKinematics::baseOffset ()\fC [inline]\fP"

.SS "virtual std::vector<double> IKinematics::FindBoundedSolution (std::vector< std::vector< double >> &solutions, std::vector< double > &min, std::vector< double > &max)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBFastKinematics\fP\&.
.SS "virtual std::vector<double> IKinematics::FindBoundedSolution (std::vector< std::vector< double >> &solutions, boost::shared_ptr< \fBIArmConfiguration\fP >config)\fC [inline]\fP, \fC [virtual]\fP"

.SS "virtual \fBRCS::Pose\fP IKinematics::FK (std::vector< double >jv)\fC [pure virtual]\fP"

.PP
FK performs the forward kinematics using the joint values of the robot provided\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvector\fP of all robot joint values in doubles\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
corresponding Cartesian robot pose of end effector\&. 
.RE
.PP

.PP
Implemented in \fBFanucLrMate200idKinematics\fP, \fBFastKinematics\fP, and \fBArmKinematics\fP\&.
.SS "virtual std::vector<double> IKinematics::GetJointValues ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
GetJointValues returns latest reading of end effector\&. 
.PP
\fBReturns:\fP
.RS 4
vector of joint values in doubles\&. 
.RE
.PP

.SS "virtual std::vector<double> IKinematics::IK (\fBRCS::Pose\fP &pose, std::vector< double >oldjoints)\fC [pure virtual]\fP"

.PP
IK performs the inverse kinematics using the Cartesian pose provided\&. 
.PP
\fBParameters:\fP
.RS 4
\fICartesian\fP robot pose of end effector\&. 
.br
\fIoptional\fP seed joint values to use as best guess for IK joint values\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
vector of all robot joint values in doubles\&. 
.RE
.PP

.PP
Implemented in \fBFanucLrMate200idKinematics\fP, \fBFastKinematics\fP, and \fBArmKinematics\fP\&.
.SS "virtual std::vector<double> IKinematics::IK (\fBRCS::Pose\fP &pose, std::vector< double >minrange, std::vector< double >maxrange)\fC [inline]\fP, \fC [virtual]\fP"

.PP
IK performs the inverse kinematics using the Cartesian pose provided\&. 
.PP
\fBParameters:\fP
.RS 4
\fICartesian\fP robot pose of end effector\&. 
.br
\fIoptional\fP seed joint values to use as best guess for IK joint values\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
vector of all robot joint values in doubles\&. 
.RE
.PP

.PP
Reimplemented in \fBFastKinematics\fP\&.
.SS "virtual void IKinematics::Init (std::stringgroupname, std::stringtiplinkname, std::stringrootlinkname)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Init is necessary for ROS to initialize it kinematics using robot model \&. 
.PP
\fBParameters:\fP
.RS 4
\fIgroupname\fP name of chained joints in robot model\&. 
.br
\fIeelinkname\fP name of end effector joint in robot model\&. 
.RE
.PP

.SS "virtual void IKinematics::Init (ros::NodeHandle &nh)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Initialize kinematics using robot_description to fill parameters \&. 
.PP
\fBParameters:\fP
.RS 4
\fInh\fP ros node handle of node\&. 
.RE
.PP

.PP
Reimplemented in \fBFanucLrMate200idKinematics\fP, \fBFastKinematics\fP, and \fBArmKinematics\fP\&.
.SS "tf::Pose IKinematics::invBaseOffset ()\fC [inline]\fP"

.SS "virtual bool IKinematics::IsSingular (\fBRCS::Pose\fP &pose, doublethreshold)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Returns true if the determinant of the jacobian is near zero\&. \&. 
.PP
\fBParameters:\fP
.RS 4
\fIgroupname\fP name of chained joints in robot model\&. 
.br
\fIeelinkname\fP name of end effector joint in robot model\&. 
.RE
.PP

.PP
Reimplemented in \fBFastKinematics\fP, and \fBArmKinematics\fP\&.
.SS "virtual std::vector<std::string> IKinematics::JointNames ()\fC [inline]\fP, \fC [virtual]\fP"

.SS "virtual std::vector<std::string> IKinematics::LinkNames ()\fC [inline]\fP, \fC [virtual]\fP"

.SS "virtual std::vector<double> IKinematics::NearestJoints (std::vector< double >oldjoints, std::vector< std::vector< double > > &newjoints)\fC [pure virtual]\fP"

.PP
NearestJoints finds the joint set that is closest to the old joints\&. 
.PP
\fBParameters:\fP
.RS 4
\fIold\fP seed joint values to use as best guess for IK joint values\&. 
.br
\fIvector\fP of double vectos that holds all the IK joint solutions\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
vector of doubles with closest set to seed joints\&. 
.RE
.PP

.PP
Implemented in \fBFanucLrMate200idKinematics\fP, and \fBArmKinematics\fP\&.
.SS "size_t IKinematics::NumJoints ()\fC [inline]\fP"

.SS "std::string& IKinematics::Prefix ()\fC [inline]\fP"

.SS "virtual void IKinematics::SetHint (std::vector< double >hint)\fC [inline]\fP, \fC [virtual]\fP"

.SS "virtual void IKinematics::SetJointValues (std::vector< double >joint_values)\fC [inline]\fP, \fC [virtual]\fP"

.PP
SetJointValues sets the latest joint values of the robot\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvector\fP of all robot joint values in doubles\&. 
.RE
.PP

.SS "virtual \fBJointState\fP IKinematics::UpdateJointState (std::vector< uint64_t >jointnums, \fBJointState\fPoldjoints, \fBJointState\fPnjoints)\fC [inline]\fP, \fC [virtual]\fP"

.SS "void IKinematics::VerifyLimits (std::vector< double >joints)\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "std::string IKinematics::_groupname\fC [protected]\fP"

.SS "std::string IKinematics::_rootlinkname\fC [protected]\fP"

.SS "std::string IKinematics::_tiplinkname\fC [protected]\fP"

.SS "boost::shared_ptr<::\fBKinematics\fP> IKinematics::armkin"

.SS "tf::Pose IKinematics::baseoffset\fC [protected]\fP"

.SS "std::vector< double> IKinematics::hint\fC [protected]\fP"

.SS "std::vector< double> IKinematics::joint_max\fC [protected]\fP"

.SS "std::vector< double> IKinematics::joint_min\fC [protected]\fP"

.SS "std::vector<std::string> IKinematics::joint_names\fC [protected]\fP"

.SS "std::vector< double> IKinematics::jointvalues\fC [protected]\fP"

.SS "std::vector<std::string> IKinematics::link_names\fC [protected]\fP"

.SS "size_t IKinematics::num_joints\fC [protected]\fP"

.SS "std::string IKinematics::prefix\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for CRCL FANUC from the source code\&.
