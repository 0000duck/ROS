.TH "RCS::CController" 3 "Wed Sep 28 2016" "CRCL FANUC" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RCS::CController \- 
.PP
The \fBCController\fP provides a collection for all the relevant controller pieces\&. The \fBCController\fP is the main controller class to collect all the references/pointers to instances in the project\&. A global instance of this class, called 'Controller', is created and is used throughout the code to reference various instances of control objects (e\&.g\&., kinematics, joint writer, joint reader, etc\&.)  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Controller\&.h>\fP
.PP
Inherits \fBRCS::Thread\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBMotionPlannerEnum\fP { \fBNOPLANNER\fP = 0, \fBMOVEIT\fP, \fBDESCARTES\fP, \fBBASIC\fP, \fBWAYPOINT\fP, \fBGOMOTION\fP }"
.br
.ti -1c
.RI "typedef std::list< \fBRCS::CanonCmd\fP > \fBxml_message_list\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCController\fP (double cycletime)"
.br
.RI "\fI\fBCController\fP constructor that requires a cycle time for \fBRCS\fP thread timing\&. \fP"
.ti -1c
.RI "\fB~CController\fP (void)"
.br
.ti -1c
.RI "bool \fBVerify\fP ()"
.br
.RI "\fIVerifies that all the pointer references in the controller have been instantiated (i\&.e\&., not null)\&. \fP"
.ti -1c
.RI "virtual int \fBAction\fP ()"
.br
.RI "\fICyclic loop for the controller\&. Reads Crcl input mexsage queue, interprets into canon cmds if any, reads canon cmds queue, interprets into robot command messages\&. \fP"
.ti -1c
.RI "void \fBSetup\fP (ros::NodeHandle &nh, std::string prefix)"
.br
.RI "\fISetup routine for the controller\&.\&. \fP"
.ti -1c
.RI "std::string \fBDump\fP (std::string separator=',')"
.br
.RI "\fICreates a comma separated string of current state of robot\&. (Can use other separator)\&. \fP"
.ti -1c
.RI "std::string \fBDumpHeader\fP (std::string separator=',')"
.br
.RI "\fICreates a header line containing names of comma separated string fields that describes the current state of robot\&. (Can use other separator)\&. \fP"
.ti -1c
.RI "\fBVAR\fP (\fBKinematics\fP, boost::shared_ptr< \fBIKinematics\fP >)"
.br
.ti -1c
.RI "\fBVAR\fP (JointWriter, boost::shared_ptr< \fBCJointWriter\fP >)"
.br
.ti -1c
.RI "\fBVAR\fP (bSimulation, bool) VAR(gripperPose"
.br
.ti -1c
.RI "\fBVAR\fP (invGripperPose, \fBRCS::Pose\fP)"
.br
.ti -1c
.RI "\fBVAR\fP (basePose, \fBRCS::Pose\fP)"
.br
.ti -1c
.RI "\fBVAR\fP (invBasePose, \fBRCS::Pose\fP)"
.br
.ti -1c
.RI "void \fBCmdCallback\fP (const nistcrcl::CrclCommandMsg::ConstPtr &cmdmsg)"
.br
.ti -1c
.RI "void \fBMotionLogging\fP ()"
.br
.ti -1c
.RI "void \fBPublishCrclStatus\fP ()"
.br
.ti -1c
.RI "void \fBSetKinematics\fP (boost::shared_ptr< \fBIKinematics\fP > k)"
.br
.RI "\fIRoutine to set the kinematics reference pointer\&. Uses the interface class \fBIKinematics\fP, but can have any implementation instance\&. \fP"
.ti -1c
.RI "\fBNVAR\fP (NewCC, \fBRCS::CanonCmd\fP, _newcc)"
.br
.ti -1c
.RI "\fBNVAR\fP (LastCC, \fBRCS::CanonCmd\fP, _lastcc)"
.br
.ti -1c
.RI "\fBRCS::CanonCmd\fP \fBGetLastRobotCommand\fP ()"
.br
.ti -1c
.RI "\fBJointState\fP \fBGetLastJointState\fP ()"
.br
.RI "\fIGet the last joint state, if no motion, last actual joint reading, else last joints on robot motion queue\&. \fP"
.ti -1c
.RI "\fBRCS::Pose\fP \fBGetLastCommandedPose\fP ()"
.br
.RI "\fIGet the last commanded , if no motion, use last actual joint reading to compute FK, else use last joints on robot motion queue to compute FK\&. \fP"
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBRCS::CanonWorldModel\fP \fBstatus\fP"
.br
.ti -1c
.RI "\fBRCS::CanonWorldModel\fP \fBlaststatus\fP"
.br
.ti -1c
.RI "\fBRCS::CMessageQueue\fP
.br
< nistcrcl::CrclCommandMsg > \fBcrclcmds\fP"
.br
.ti -1c
.RI "std::list< \fBRCS::CanonCmd\fP > \fBdonecmds\fP"
.br
.ti -1c
.RI "\fBRCS::CMessageQueue\fP< \fBRCS::CanonCmd\fP > \fBrobotcmds\fP"
.br
.ti -1c
.RI "ros::Publisher \fBcrcl_status\fP"
.br
.ti -1c
.RI "ros::Subscriber \fBcrcl_cmd\fP"
.br
.ti -1c
.RI "ros::Publisher \fBrviz_jntcmd\fP"
.br
.ti -1c
.RI "ros::NodeHandle * \fB_nh\fP"
.br
.ti -1c
.RI "\fBGripperInterface\fP \fBgripper\fP"
.br
.ti -1c
.RI "boost::shared_ptr
.br
< \fBIRCSInterpreter\fP > \fB_interpreter\fP"
.br
.ti -1c
.RI "\fBMotionPlannerEnum\fP \fBeCartesianMotionPlanner\fP"
.br
.ti -1c
.RI "\fBMotionPlannerEnum\fP \fBeJointMotionPlanner\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBCController\fP provides a collection for all the relevant controller pieces\&. The \fBCController\fP is the main controller class to collect all the references/pointers to instances in the project\&. A global instance of this class, called 'Controller', is created and is used throughout the code to reference various instances of control objects (e\&.g\&., kinematics, joint writer, joint reader, etc\&.) 
.SH "Member Typedef Documentation"
.PP 
.SS "typedef std::list<\fBRCS::CanonCmd\fP> \fBRCS::CController::xml_message_list\fP"

.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBRCS::CController::MotionPlannerEnum\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fINOPLANNER \fP\fP
.TP
\fB\fIMOVEIT \fP\fP
.TP
\fB\fIDESCARTES \fP\fP
.TP
\fB\fIBASIC \fP\fP
.TP
\fB\fIWAYPOINT \fP\fP
.TP
\fB\fIGOMOTION \fP\fP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "RCS::CController::CController (doublecycletime)"

.PP
\fBCController\fP constructor that requires a cycle time for \fBRCS\fP thread timing\&. 
.PP
\fBParameters:\fP
.RS 4
\fIcycletime\fP in seconds\&. 
.RE
.PP

.SS "RCS::CController::~CController (void)"

.SH "Member Function Documentation"
.PP 
.SS "int RCS::CController::Action ()\fC [virtual]\fP"

.PP
Cyclic loop for the controller\&. Reads Crcl input mexsage queue, interprets into canon cmds if any, reads canon cmds queue, interprets into robot command messages\&. std_msgs/Header headerposition uint8 crclcommandnum uint8 crclstatusnum uint8 crclcommandstatus 
.SS ""
.PP
uint8 done=0 uint8 error=1 uint8 working=2 
.SS ""
.PP
geometry_msgs/Pose statuspose sensor_msgs/JointState statusjoints float64 eepercent < current robot pose 
.PP
Reimplemented from \fBRCS::Thread\fP\&.
.SS "void RCS::CController::CmdCallback (const nistcrcl::CrclCommandMsg::ConstPtr &cmdmsg)"

.SS "std::string RCS::CController::Dump (std::stringseparator = \fC','\fP)"

.PP
Creates a comma separated string of current state of robot\&. (Can use other separator)\&. 
.SS "std::string RCS::CController::DumpHeader (std::stringseparator = \fC','\fP)"

.PP
Creates a header line containing names of comma separated string fields that describes the current state of robot\&. (Can use other separator)\&. 
.SS "\fBRCS::Pose\fP RCS::CController::GetLastCommandedPose ()"

.PP
Get the last commanded , if no motion, use last actual joint reading to compute FK, else use last joints on robot motion queue to compute FK\&. 
.SS "\fBJointState\fP RCS::CController::GetLastJointState ()"

.PP
Get the last joint state, if no motion, last actual joint reading, else last joints on robot motion queue\&. 
.SS "\fBRCS::CanonCmd\fP RCS::CController::GetLastRobotCommand ()"

.SS "void RCS::CController::MotionLogging ()"

.SS "RCS::CController::NVAR (NewCC, \fBRCS::CanonCmd\fP, _newcc)"
last canon command interpreted 
.SS "RCS::CController::NVAR (LastCC, \fBRCS::CanonCmd\fP, _lastcc)"

.SS "void RCS::CController::PublishCrclStatus ()"
< current robot pose 
.SS "void RCS::CController::SetKinematics (boost::shared_ptr< \fBIKinematics\fP >k)\fC [inline]\fP"

.PP
Routine to set the kinematics reference pointer\&. Uses the interface class \fBIKinematics\fP, but can have any implementation instance\&. 
.SS "void RCS::CController::Setup (ros::NodeHandle &nh, std::stringprefix)"

.PP
Setup routine for the controller\&.\&. 
.SS "RCS::CController::VAR (\fBKinematics\fP, boost::shared_ptr< \fBIKinematics\fP >)"

.SS "RCS::CController::VAR (JointWriter, boost::shared_ptr< \fBCJointWriter\fP >)"

.SS "RCS::CController::VAR (bSimulation, bool)"

.SS "RCS::CController::VAR (invGripperPose, \fBRCS::Pose\fP)"

.SS "RCS::CController::VAR (basePose, \fBRCS::Pose\fP)"

.SS "RCS::CController::VAR (invBasePose, \fBRCS::Pose\fP)"

.SS "bool RCS::CController::Verify ()"

.PP
Verifies that all the pointer references in the controller have been instantiated (i\&.e\&., not null)\&. 
.SH "Member Data Documentation"
.PP 
.SS "boost::shared_ptr<\fBIRCSInterpreter\fP> RCS::CController::_interpreter"
interprets canon commands into robot commands current new canon command to interpret 
.SS "ros::NodeHandle* RCS::CController::_nh"

.SS "ros::Subscriber RCS::CController::crcl_cmd"
ros subscriber information used for crcl command updates 
.SS "ros::Publisher RCS::CController::crcl_status"
ros publisher information used for crcl status updates 
.SS "\fBRCS::CMessageQueue\fP<nistcrcl::CrclCommandMsg > RCS::CController::crclcmds"
queue of commands interpreted from Crcl messages 
.SS "std::list<\fBRCS::CanonCmd\fP> RCS::CController::donecmds"
list of commands interpreted from Crcl messages that have completed 
.SS "\fBMotionPlannerEnum\fP RCS::CController::eCartesianMotionPlanner"
type of cartesian motion to use 
.SS "\fBMotionPlannerEnum\fP RCS::CController::eJointMotionPlanner"
type of joint motion to use 
.SS "\fBGripperInterface\fP RCS::CController::gripper"

.SS "\fBRCS::CanonWorldModel\fP RCS::CController::laststatus"
last status of controller 
.SS "\fBRCS::CMessageQueue\fP<\fBRCS::CanonCmd\fP> RCS::CController::robotcmds"
list of commands to be sent to robot 
.SS "ros::Publisher RCS::CController::rviz_jntcmd"
ros publisher information for joint_publisher 
.SS "\fBRCS::CanonWorldModel\fP RCS::CController::status"
current status of controller 

.SH "Author"
.PP 
Generated automatically by Doxygen for CRCL FANUC from the source code\&.
