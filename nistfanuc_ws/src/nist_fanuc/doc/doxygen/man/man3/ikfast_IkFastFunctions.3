.TH "ikfast::IkFastFunctions< T >" 3 "Wed Sep 28 2016" "CRCL FANUC" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ikfast::IkFastFunctions< T > \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ikfast\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef bool(* \fBComputeIkFn\fP )(const T *, const T *, const T *, \fBIkSolutionListBase\fP< T > &)"
.br
.ti -1c
.RI "typedef bool(* \fBComputeIk2Fn\fP )(const T *, const T *, const T *, \fBIkSolutionListBase\fP< T > &, void *)"
.br
.ti -1c
.RI "typedef void(* \fBComputeFkFn\fP )(const T *, T *, T *)"
.br
.ti -1c
.RI "typedef int(* \fBGetNumFreeParametersFn\fP )()"
.br
.ti -1c
.RI "typedef int *(* \fBGetFreeParametersFn\fP )()"
.br
.ti -1c
.RI "typedef int(* \fBGetNumJointsFn\fP )()"
.br
.ti -1c
.RI "typedef int(* \fBGetIkRealSizeFn\fP )()"
.br
.ti -1c
.RI "typedef const char *(* \fBGetIkFastVersionFn\fP )()"
.br
.ti -1c
.RI "typedef int(* \fBGetIkTypeFn\fP )()"
.br
.ti -1c
.RI "typedef const char *(* \fBGetKinematicsHashFn\fP )()"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBIkFastFunctions\fP ()"
.br
.ti -1c
.RI "virtual \fB~IkFastFunctions\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBComputeIkFn\fP \fB_ComputeIk\fP"
.br
.ti -1c
.RI "\fBComputeIk2Fn\fP \fB_ComputeIk2\fP"
.br
.ti -1c
.RI "\fBComputeFkFn\fP \fB_ComputeFk\fP"
.br
.ti -1c
.RI "\fBGetNumFreeParametersFn\fP \fB_GetNumFreeParameters\fP"
.br
.ti -1c
.RI "\fBGetFreeParametersFn\fP \fB_GetFreeParameters\fP"
.br
.ti -1c
.RI "\fBGetNumJointsFn\fP \fB_GetNumJoints\fP"
.br
.ti -1c
.RI "\fBGetIkRealSizeFn\fP \fB_GetIkRealSize\fP"
.br
.ti -1c
.RI "\fBGetIkFastVersionFn\fP \fB_GetIkFastVersion\fP"
.br
.ti -1c
.RI "\fBGetIkTypeFn\fP \fB_GetIkType\fP"
.br
.ti -1c
.RI "\fBGetKinematicsHashFn\fP \fB_GetKinematicsHash\fP"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename T > typedef void( * \fBikfast::IkFastFunctions\fP< T >::ComputeFkFn)(const T *, T *, T *)"

.SS "template<typename T > typedef bool( * \fBikfast::IkFastFunctions\fP< T >::ComputeIk2Fn)(const T *, const T *, const T *, \fBIkSolutionListBase\fP< T > &, void *)"

.SS "template<typename T > typedef bool( * \fBikfast::IkFastFunctions\fP< T >::ComputeIkFn)(const T *, const T *, const T *, \fBIkSolutionListBase\fP< T > &)"

.SS "template<typename T > typedef int*( * \fBikfast::IkFastFunctions\fP< T >::GetFreeParametersFn)()"

.SS "template<typename T > typedef const char*( * \fBikfast::IkFastFunctions\fP< T >::GetIkFastVersionFn)()"

.SS "template<typename T > typedef int( * \fBikfast::IkFastFunctions\fP< T >::GetIkRealSizeFn)()"

.SS "template<typename T > typedef int( * \fBikfast::IkFastFunctions\fP< T >::GetIkTypeFn)()"

.SS "template<typename T > typedef const char*( * \fBikfast::IkFastFunctions\fP< T >::GetKinematicsHashFn)()"

.SS "template<typename T > typedef int( * \fBikfast::IkFastFunctions\fP< T >::GetNumFreeParametersFn)()"

.SS "template<typename T > typedef int( * \fBikfast::IkFastFunctions\fP< T >::GetNumJointsFn)()"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename T > \fBikfast::IkFastFunctions\fP< T >::\fBIkFastFunctions\fP ()\fC [inline]\fP"

.SS "template<typename T > virtual \fBikfast::IkFastFunctions\fP< T >::~\fBIkFastFunctions\fP ()\fC [inline]\fP, \fC [virtual]\fP"

.SH "Member Data Documentation"
.PP 
.SS "template<typename T > \fBComputeFkFn\fP \fBikfast::IkFastFunctions\fP< T >::_ComputeFk"

.SS "template<typename T > \fBComputeIkFn\fP \fBikfast::IkFastFunctions\fP< T >::_ComputeIk"

.SS "template<typename T > \fBComputeIk2Fn\fP \fBikfast::IkFastFunctions\fP< T >::_ComputeIk2"

.SS "template<typename T > \fBGetFreeParametersFn\fP \fBikfast::IkFastFunctions\fP< T >::_GetFreeParameters"

.SS "template<typename T > \fBGetIkFastVersionFn\fP \fBikfast::IkFastFunctions\fP< T >::_GetIkFastVersion"

.SS "template<typename T > \fBGetIkRealSizeFn\fP \fBikfast::IkFastFunctions\fP< T >::_GetIkRealSize"

.SS "template<typename T > \fBGetIkTypeFn\fP \fBikfast::IkFastFunctions\fP< T >::_GetIkType"

.SS "template<typename T > \fBGetKinematicsHashFn\fP \fBikfast::IkFastFunctions\fP< T >::_GetKinematicsHash"

.SS "template<typename T > \fBGetNumFreeParametersFn\fP \fBikfast::IkFastFunctions\fP< T >::_GetNumFreeParameters"

.SS "template<typename T > \fBGetNumJointsFn\fP \fBikfast::IkFastFunctions\fP< T >::_GetNumJoints"


.SH "Author"
.PP 
Generated automatically by Doxygen for CRCL FANUC from the source code\&.
