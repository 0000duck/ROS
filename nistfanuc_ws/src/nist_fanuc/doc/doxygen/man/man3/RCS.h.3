.TH "/usr/local/michalos/nistfanuc_ws/src/nist_fanuc/include/nist_fanuc/RCS.h" 3 "Wed Sep 28 2016" "CRCL FANUC" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/usr/local/michalos/nistfanuc_ws/src/nist_fanuc/include/nist_fanuc/RCS.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <math\&.h>\fP
.br
\fC#include <stdarg\&.h>\fP
.br
\fC#include <ros/ros\&.h>\fP
.br
\fC#include <moveit/robot_model_loader/robot_model_loader\&.h>\fP
.br
\fC#include <moveit/robot_model/robot_model\&.h>\fP
.br
\fC#include <tf/transform_datatypes\&.h>\fP
.br
\fC#include <sensor_msgs/JointState\&.h>\fP
.br
\fC#include <nistcrcl/CrclCommandMsg\&.h>\fP
.br
\fC#include <nistcrcl/CrclStatusMsg\&.h>\fP
.br
\fC#include <nistcrcl/CrclMaxProfileMsg\&.h>\fP
.br
\fC#include 'Globals\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBRCS::PoseTolerance\fP"
.br
.ti -1c
.RI "struct \fBRCS::CanonLengthUnit\fP"
.br
.RI "\fIenumeration of length units\&. \fBConversion\fP into ROS compatible meters\&. \fP"
.ti -1c
.RI "struct \fBRCS::TrajPointType\fP"
.br
.RI "\fIenumeration of trajectory pose points\&. \fP"
.ti -1c
.RI "struct \fBRCS::CanonAngleUnit\fP"
.br
.RI "\fIenumeration of angle units\&. \fBConversion\fP into ROS compatible radians\&. \fP"
.ti -1c
.RI "struct \fBRCS::CanonForceUnit\fP"
.br
.RI "\fIenumeration of force units\&. \fP"
.ti -1c
.RI "struct \fBRCS::CanonTorqueUnit\fP"
.br
.RI "\fIenumeration of torque units\&. \fP"
.ti -1c
.RI "struct \fBRCS::CanonReturn\fP"
.br
.RI "\fIenumeration of return type from Crcl intepretation\&. If statusreply, requires status sent to Crcl client\&. \fP"
.ti -1c
.RI "struct \fBRCS::CanonCmdType\fP"
.br
.RI "\fIenumeration of Crcl commands\&. Many Crcl commands are wm parameter setting and require no motion component\&. \fP"
.ti -1c
.RI "struct \fBRCS::CanonStopMotionType\fP"
.br
.RI "\fIenumeration of stopping motion, e\&.g\&., estop equivalent to immediate\&. \fP"
.ti -1c
.RI "struct \fBRCS::CanonAccProfile\fP"
.br
.RI "\fIenumeration of trajectory acceleration profile\&. \fP"
.ti -1c
.RI "struct \fBRCS::MovementType\fP"
.br
.RI "\fIenumeration of trajectory motion type, joint or cartesian\&. \fP"
.ti -1c
.RI "struct \fBRCS::CanonStatusType\fP"
.br
.RI "\fIenumeration of controller status types for individual commands\&. Note, even though command types are listed, not all used or supported\&. \fP"
.ti -1c
.RI "class \fBRCS::IRate\fP"
.br
.RI "\fI\fBIRate\fP is an interface class for defining the allowed motion rates\&. \fP"
.ti -1c
.RI "struct \fBRCS::CanonCmd\fP"
.br
.RI "\fI\fBCanonCmd\fP is the controller command structure\&. \fP"
.ti -1c
.RI "struct \fBRCS::CanonWorldModel\fP"
.br
.RI "\fI\fBCanonWorldModel\fP describes the controller state\&. Includes reference to robot model\&. \fP"
.ti -1c
.RI "class \fBRCS::IRCSInterpreter\fP"
.br
.RI "\fIIInterpreter parses a \fBRCS\fP command and generates robot motion commands\&. \fP"
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "\fBRCS\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fB_USE_MATH_DEFINES\fP"
.br
.ti -1c
.RI "#define \fBLENGTHUNITS\fP   1000"
.br
.ti -1c
.RI "#define \fBEPSILON\fP   1E-04"
.br
.ti -1c
.RI "#define \fBDEFAULT_LOOP_CYCLE\fP   0\&.10"
.br
.ti -1c
.RI "#define \fBDEFAULT_CART_MAX_ACCEL\fP   200\&.0/\fBLENGTHUNITS\fP"
.br
.ti -1c
.RI "#define \fBDEFAULT_CART_MAX_VEL\fP   2000\&.0/\fBLENGTHUNITS\fP"
.br
.ti -1c
.RI "#define \fBDEFAULT_JOINT_MAX_ACCEL\fP   200\&.0/\fBLENGTHUNITS\fP"
.br
.ti -1c
.RI "#define \fBDEFAULT_JOINT_MAX_VEL\fP   2000\&.0/\fBLENGTHUNITS\fP"
.br
.ti -1c
.RI "#define \fBHAVE_SINCOS\fP"
.br
.ti -1c
.RI "#define \fBDeg2Rad\fP(Ang)   ( (double) ( Ang * M_PI / 180\&.0 ) )"
.br
.ti -1c
.RI "#define \fBRad2Deg\fP(Ang)   ( (double) ( Ang * 180\&.0 / M_PI ) )"
.br
.ti -1c
.RI "#define \fBMM2Meter\fP(d)   ( (double) ( d / 1000\&.00 ) )"
.br
.ti -1c
.RI "#define \fBMeter2MM\fP(d)   ( (double) ( d * 1000\&.00 ) )"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef 
.br
sensor_msgs::JointState_
.br
< std::allocator< void > > \fBJointState\fP"
.br
.ti -1c
.RI "typedef boost::shared_ptr
.br
< \fBJointState\fP > \fBJointStateSharedPtr\fP"
.br
.ti -1c
.RI "typedef tf::Pose \fBRCS::Pose\fP"
.br
.ti -1c
.RI "typedef tf::Vector3 \fBRCS::Position\fP"
.br
.ti -1c
.RI "typedef tf::Quaternion \fBRCS::Rotation\fP"
.br
.ti -1c
.RI "typedef tf::Vector3 \fBRCS::Vector3\fP"
.br
.ti -1c
.RI "typedef double \fBRCS::Length\fP"
.br
.ti -1c
.RI "typedef double \fBRCS::LinearVelocity\fP"
.br
.ti -1c
.RI "typedef double \fBRCS::AngularVelocity\fP"
.br
.ti -1c
.RI "typedef std::vector< double > \fBRCS::robotAxes\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBsincos\fP (double x, double *sx, double *cx)"
.br
.ti -1c
.RI "template<typename T > std::vector< T > \fBToVector\fP (int n,\&.\&.\&.)"
.br
.ti -1c
.RI "template<typename T > std::vector< T > \fBToRadianVector\fP (std::vector< T > goaljts)"
.br
.ti -1c
.RI "void \fBRCS::getRPY\fP (const \fBRCS::Pose\fP pose, double &roll, double &pitch, double &yaw)"
.br
.ti -1c
.RI "\fBJointState\fP \fBRCS::EmptyJointState\fP (size_t n)"
.br
.ti -1c
.RI "\fBJointState\fP \fBRCS::Subset\fP (\fBJointState\fP js, size_t n)"
.br
.ti -1c
.RI "std::vector< double > \fBRCS::Subset\fP (std::vector< double > position, size_t n)"
.br
.ti -1c
.RI "\fBJointState\fP \fBRCS::ZeroJointState\fP (size_t numjoints)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define _USE_MATH_DEFINES"

.SS "#define DEFAULT_CART_MAX_ACCEL   200\&.0/\fBLENGTHUNITS\fP"

.SS "#define DEFAULT_CART_MAX_VEL   2000\&.0/\fBLENGTHUNITS\fP"

.SS "#define DEFAULT_JOINT_MAX_ACCEL   200\&.0/\fBLENGTHUNITS\fP"

.SS "#define DEFAULT_JOINT_MAX_VEL   2000\&.0/\fBLENGTHUNITS\fP"

.SS "#define DEFAULT_LOOP_CYCLE   0\&.10"

.SS "#define Deg2Rad(Ang)   ( (double) ( Ang * M_PI / 180\&.0 ) )"

.SS "#define EPSILON   1E-04"

.SS "#define HAVE_SINCOS"

.SS "#define LENGTHUNITS   1000"

.SS "#define Meter2MM(d)   ( (double) ( d * 1000\&.00 ) )"

.SS "#define MM2Meter(d)   ( (double) ( d / 1000\&.00 ) )"

.SS "#define Rad2Deg(Ang)   ( (double) ( Ang * 180\&.0 / M_PI ) )"

.SH "Typedef Documentation"
.PP 
.SS "typedef sensor_msgs::JointState_<std::allocator<void> > \fBJointState\fP"

.SS "typedef boost::shared_ptr<\fBJointState\fP> \fBJointStateSharedPtr\fP"

.SH "Function Documentation"
.PP 
.SS "void sincos (doublex, double *sx, double *cx)\fC [inline]\fP"

.SS "template<typename T > std::vector<T> ToRadianVector (std::vector< T >goaljts)\fC [inline]\fP"

.SS "template<typename T > std::vector<T> ToVector (intn, \&.\&.\&.)\fC [inline]\fP"

.SH "Author"
.PP 
Generated automatically by Doxygen for CRCL FANUC from the source code\&.
